

---- PROGRAM STATE ----

Execution Stack:
 (varf is string;  (varf = text.in;  (Opened Read File: Look up varf;  (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) ) ) ) 


Symbol Table:


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
varf is string
 (varf = text.in;  (Opened Read File: Look up varf;  (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) ) ) 


Symbol Table:


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (varf = text.in;  (Opened Read File: Look up varf;  (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) ) ) 


Symbol Table:
varf -> 


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
varf = text.in
 (Opened Read File: Look up varf;  (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) ) 


Symbol Table:
varf -> 


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (Opened Read File: Look up varf;  (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) ) 


Symbol Table:
varf -> text.in


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
Opened Read File: Look up varf
 (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) 


Symbol Table:
varf -> text.in


Heap Memory:


Output:
[]

File Table:

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (varc is int;  (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) ) 


Symbol Table:
varf -> text.in


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
varc is int
 (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) 


Symbol Table:
varf -> text.in


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (Read from Look up varf var varc;  (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) ) 


Symbol Table:
varf -> text.in
varc -> 0


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
Read from Look up varf var varc
 (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) 


Symbol Table:
varf -> text.in
varc -> 0


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (print(Look up varc);  (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) ) 


Symbol Table:
varf -> text.in
varc -> 15


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
print(Look up varc)
 (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) 


Symbol Table:
varf -> text.in
varc -> 15


Heap Memory:


Output:
[]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (Read from Look up varf var varc;  (print(Look up varc); Close File Look up varf) ) 


Symbol Table:
varf -> text.in
varc -> 15


Heap Memory:


Output:
[15]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
Read from Look up varf var varc
 (print(Look up varc); Close File Look up varf) 


Symbol Table:
varf -> text.in
varc -> 15


Heap Memory:


Output:
[15]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
 (print(Look up varc); Close File Look up varf) 


Symbol Table:
varf -> text.in
varc -> 20


Heap Memory:


Output:
[15]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
print(Look up varc)
Close File Look up varf


Symbol Table:
varf -> text.in
varc -> 20


Heap Memory:


Output:
[15]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:
Close File Look up varf


Symbol Table:
varf -> text.in
varc -> 20


Heap Memory:


Output:
[15, 20]

File Table:
text.in -> java.io.BufferedReader@37f8bb67

----------------------------------


---- PROGRAM STATE ----

Execution Stack:


Symbol Table:
varf -> text.in
varc -> 20


Heap Memory:


Output:
[15, 20]

File Table:

----------------------------------
